PREFIX schema: <http://schema.org/>
PREFIX ex: <http://example.org/>
PREFIX sh: <http://www.w3.org/ns/shacl#> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

insert {
   ?event  ex:score ?totalScore  .
   ?event  ex:score ?DatasetBreakdown .
   ?DatasetBreakdown ex:startDateScore ?startDate_score ; 
    ex:name_score ?name_score ; 
    ex:location_type_score ?location_type_score ; 
    ex:location_name_score ?location_name_score ; 
    ex:location_postalCode_score ?location_postalCode_score ;
    ex:location_sameAs_score ?location_sameAs_score ;
    ex:url_score  ?url_score ;
    ex:additionalType_score ?additionalType_score ;
    ex:description_score ?description_score ;
    ex:image_url_score ?image_url_score ;
    ex:organizer_type_score ?organizer_type_score ;
    ex:organizer_sameAs_score ?organizer_sameAs_score ;
    ex:performer_type_score ?performer_type_score ;
    ex:performer_sameAs_score ?performer_sameAs_score ;
    ex:offer_type_score ?offer_type_score ;
    ex:offer_url_score ?offer_url_score .
}
where {
  # TODO: use inferencing to get all Event sub-classes
  values ?event_type { schema:Event schema:TheaterEvent schema:MusicEvent}
  ?event a ?event_type .
  # Nest DatasetBreakdown
  BIND(BNODE() as ?DatasetBreakdown) .


  ########################
  # startDate: 12 points
  ########################

  OPTIONAL {
    ?event schema:startDate ?startDate .
    OPTIONAL {
      ?warning sh:focusNode ?event ; sh:resultPath schema:startDate .
    }
    filter(!BOUND(?warning))
  }
  BIND(IF(BOUND(?startDate),12,0) as ?startDate_score)


  ########################
  # Required properties: 8 points
  ########################

  # event name
  OPTIONAL {
    ?event schema:name ?name .
  }
  BIND(IF(BOUND(?name),8,0) as ?name_score)

  # location type
  OPTIONAL {
    ?event schema:location ?loc .
    ?loc a ?location_type . 
  }
  BIND(IF(BOUND(?location_type),8,0) as ?location_type_score)


  ########################
  # Disambiguation properties: 4 points
  ########################
  
  # location name
  OPTIONAL {
    ?event schema:location/schema:name ?location_name . 
  }
  BIND(IF(BOUND(?location_name),4,0) as ?location_name_score)

  # location postalCode
  OPTIONAL {
    ?event schema:location/schema:address ?postal_address .
    ?postal_address schema:postalCode ?location_postalCode .
     OPTIONAL {
      ?warning sh:focusNode ?postal_address ; sh:resultPath schema:postalCode .
    }
    filter(!BOUND(?warning))
  }
  BIND(IF(BOUND(?location_postalCode),4,0) as ?location_postalCode_score)

  # location sameAs
  OPTIONAL {
    ?event schema:location ?loc .
    ?loc schema:sameAs ?location_sameAs .
     OPTIONAL {
      ?warning sh:focusNode ?loc ; sh:resultPath schema:postalCode .
    }
    filter(!BOUND(?warning))
  }
  BIND(IF(BOUND(?location_sameAs),4,0) as ?location_sameAs_score)

  ########################
  # 2 points
  ########################

  # event id
  # TODO - this is not a required property in SHACL
  
  # url
  OPTIONAL {
    ?event schema:url ?url .
  }
  BIND(IF(BOUND(?url),2,0) as ?url_score)

  # additionalType
  OPTIONAL {
    ?event schema:additionalType ?additionalType .
  }
  BIND(IF(BOUND(?additionalType),2,0) as ?additionalType_score)
   
  # description
  OPTIONAL {
    ?event schema:description ?description .
  }
  BIND(IF(BOUND(?description),2,0) as ?description_score)
  
  # image with a proper url value OR nested ImageObject with a proper image.url value
  OPTIONAL {
    ?event schema:image  ?image_url .
     OPTIONAL {
      ?warning sh:focusNode ?event ; sh:resultPath schema:image .
    }
    filter(!BOUND(?warning))
  }
  BIND(IF(BOUND(?image_url),2,0) as ?image_url_score)

  # organizer.type with expected object value for the property
  OPTIONAL {
    ?event schema:organizer ?organizer .
    ?organizer a ?organizer_type . 
  }
  BIND(IF(BOUND(?organizer_type),2,0) as ?organizer_type_score)

  # organizer.sameAs with a URI constituting a unique identifier for the object
  OPTIONAL {
    ?event schema:organizer ?organizer .
    ?organizer schema:sameAs ?organizer_sameAs . 
  }
  BIND(IF(BOUND(?organizer_sameAs),2,0) as ?organizer_sameAs_score)
  
  # performer.type with expected object value for the property
  OPTIONAL {
    ?event schema:performer ?performer .
    ?performer a ?performer_type . 
  }
  BIND(IF(BOUND(?performer_type),2,0) as ?performer_type_score)

  # performer.sameAs with a URI constituting a unique identifier for the object
  OPTIONAL {
    ?event schema:performer ?performer .
    ?performer schema:sameAs ?performer_sameAs . 
  }
  BIND(IF(BOUND(?performer_sameAs),2,0) as ?performer_sameAs_score)

  # offers.type with expected object value for the property (Offer or AggregateOffer)
  OPTIONAL {
    ?event schema:offers ?offer .
    ?offer a schema:Offer .
  }
  OPTIONAL {
    ?event schema:offers ?offer .
    ?offer a schema:AggregateOffer .
  }
  BIND(IF(BOUND(?offer),2,0) as ?offer_type_score)

  # offers.url
  OPTIONAL {
    ?event schema:offers ?offer .
    ?offer schema:url ?offer_url .
  }
  BIND(IF(BOUND(?offer_url),2,0) as ?offer_url_score)

  ########################
  # required properties 
  # - defined in SHACL
  # - if required properties are present, 
  # - then add up the scores
  ########################
  OPTIONAL {
    ?violation sh:focusNode ?event ; sh:resultSeverity sh:Violation .
  }
  BIND( IF(BOUND(?violation),0, 
    ?startDate_score + 
    ?name_score + 
    ?location_type_score + 
    ?location_name_score + 
    ?location_postalCode_score +
    ?location_sameAs_score + 
    ?url_score +
    ?additionalType_score +
    ?description_score +
    ?image_url_score +
    ?organizer_type_score +
    ?organizer_sameAs_score + 
    ?performer_type_score +
    ?performer_sameAs_score +
    ?offer_type_score + 
    ?offer_url_score
    ) as ?totalScore)
  

  
}
